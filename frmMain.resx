<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>212, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AgAA/wIAAP8AAAD/AAAB/wAAAf8AAAP/AAAD/wAAA/8AAAH/AgAA/wIA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8CAAD/AAEA/wAAAP8AAAH/AAID/wABAv8AAQL/AAAB/wAA
        AP8BAQH/AAAA/wAAAP8CAgL/AQEB/wAAAP8AAAD/AgIC/wICAv8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wIAAP8AAAD/AAAA/wAAAP8AAQD/AAIA/wAB
        AP8AAgD/AAEA/wABAP8BAQH/AQEB/wAAAP8AAAD/AAAA/wEBAf8AAAD/AAAA/wICAv8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AgAA/wAAAP8AAQD/AgUD/wAD
        AP8ABgD/AAUA/wAGAP8ACAD/AAIA/wABAP8BAgD/AAEA/wAAAP8BAQH/AQEB/wAAAP8AAAD/AgIC/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8CAAD/AAAA/wAB
        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
        Af8AAQD/AAEA/wAAAP8AAAH/AAAB/wAAAf8AAAD/AAAA/wAAAf8AAQD/AAUA/wIQAP8bMgb/R2Mu/0lk
        Mv8sQx3/EiMV/wAGA/8AAgD/AgMA/wEBAf8CAAH/AwAC/wIAAP8EAAD/BQMC/wIAAP8CAAD/AQAE/wIA
        Bv8BAAT/AQAC/wMBAP8DAQD/AgIC/wAAAf8AAAH/AAAB/wEBAf8AAQD/AAAA/wABAP8CBgH/AAMA/wUM
        AP8eKRX/JjAf/xMcD/8BCAH/AAMB/wABAP8AAQD/AAAA/wAAAP8AAAD/AAAA/wIAAP8AAAD/AAAA/wAA
        AP8AAAH/AAAB/wAAAf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wABAP8AAQD/AAEA/wAB
        AP8AAQD/AAEA/wMEAv8EBQP/AAEA/wABAP8BAgD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAEA/wAB
        AP8AAQD/AAEA/wMEAv8EBQP/AAEA/wABAP8AAQD/AQIA/wABAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>